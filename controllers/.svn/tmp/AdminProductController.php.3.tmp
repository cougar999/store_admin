<?php
class AdminProductController extends AdminController{
		
	public function __construct(){
		$this->template_info = true;
		$this->count = 20;
		parent::__construct();
	}
	
	public function initAction() {
		$pageno = intval(getValue('pageno',1));
		$page = Product::getPageList($pageno);
		$this->assign('page', $page);
		$this->view('product/index.html');
	}
	
	public function addAction() {
		if(!isSubmit('isProductSubmit')){
			$this->view('product/add.html');
		} else {
			
			$name = trim(getValue('name'));
			$stock = trim(getValue('stock'));
			$description = trim(getValue('description'));
			$pack_list = trim(getValue('pack_list'));
			$status = intval(getValue('status'));
			$service = trim(getValue('service'));
			$channel_code = trim(getValue('channel_code'));
			$products_spec = trim(getValue('products_spec'));
			$original_price = intval(getValue('original_price'));
			$original_price_name = trim(getValue('original_price_name'));
			$use_price = intval(getValue('use_price'));
			$use_price_name = trim(getValue('use_price_name'));
			$dicount_price = intval(getValue('dicount_price'));
			$discount_price_name = trim(getValue('discount_price_name'));
			$last_updater = trim(getValue('last_updater'));
			
			$category_id = intval(getValue('category_id'));
			$category_type = trim(getValue('category_type', 0));
			$product_order = trim(getValue('product_order', 0));
			
			$arr_input = array();
			$arr_input['name'] = $name;
			$arr_input['stock'] = $stock;
			$arr_input['description'] = $description;
			$arr_input['pack_list'] = $pack_list;
			$arr_input['status'] = $status;
			$arr_input['service'] = $service;
			$arr_input['channel_code'] = $channel_code;
			$arr_input['products_spec'] = $products_spec;
			$arr_input['original_price'] = $original_price;
			$arr_input['original_price_name'] = $original_price_name;
			$arr_input['use_price'] = $use_price;
			$arr_input['use_price_name'] = $use_price_name;
			$arr_input['dicount_price'] = $dicount_price;
			$arr_input['discount_price_name'] = $discount_price_name;
			$arr_input['last_updater'] = $last_updater;
			$arr_input['default_image'] = $default_image;
			$arr_input['category_id'] = $category_id;
			$arr_input['category_type'] = $category_type;
			$arr_input['product_order'] = $product_order;
			$arr_input['locate_type'] = trim(getValue('locate_type', 1));
			
			if(!empty($_FILES['default_image']['name'])) {
				$obj_img = new Image();
				$arr_input['url'] = $obj_img->uploadFile($_FILES['default_image']); 
			}
			
			print_r($arr_input);
			exit;
			
			$obj_product = new Product();
			
			$image = $obj_product->addImage($arr_input);
			//echo $arr_input['default_image'];
			
			
			$result = $obj_product->addProduct($arr_input);
			if($result) {
				header("Location:/product");
			}
		}
		
	}
	
	public function modifyAction () {
		if(!isSubmit('isProductSubmit')){
			
			$product_id = trim(getValue('id'));
			$this->assign('page', Product::viewProduct($product_id));
			$this->assign('cate', Product::getProductCate($product_id));
			$this->assign('attrvalue', Product::getProductAttrValue($product_id));
			$this->assign('attrcross', Product::getProductAttrCross($product_id));
			$this->assign('cross', Product::getProductCross($this->get('attrvalue'), $this->get('attrcross')));
			
			$this->view('product/edit.html');
			
		} else {
			
			$arr_input = array();
			$arr_input['id'] = trim(getValue('id'));
			$arr_input['name'] = trim(getValue('name'));
			$arr_input['stock'] = trim(getValue('stock'));
			$arr_input['description'] = trim(getValue('description'));
			$arr_input['pack_list'] = trim(getValue('pack_list'));
			$arr_input['status'] = intval(getValue('status'));
			$arr_input['service'] = trim(getValue('service'));
			$arr_input['channel_code'] = trim(getValue('channel_code'));
			$arr_input['products_spec'] = trim(getValue('products_spec'));
			$arr_input['original_price'] = intval(getValue('original_price'));
			$arr_input['original_price_name'] = trim(getValue('original_price_name'));
			$arr_input['use_price'] = intval(getValue('use_price'));
			$arr_input['use_price_name'] = trim(getValue('use_price_name'));
			$arr_input['dicount_price'] = intval(getValue('dicount_price'));
			$arr_input['discount_price_name'] = trim(getValue('discount_price_name'));
			$arr_input['last_updater'] = trim(getValue('last_updater'));
			if(!empty($_FILES['default_image']['name'])){
				$obj_img = new Image();
				$default_image = $obj_img->addImage($_FILES['default_image']); 
				$arr_input['default_image'] = $default_image;
			}
			$arr_input['category_id'] = intval(getValue('category_id'));
			$arr_input['category_type'] = trim(getValue('category_type', 0));
			$arr_input['product_order'] = trim(getValue('product_order', 0));
			
			//属性添加的相关信息
			/*$comb_input['product_id'] = trim(getValue('id'));
			$comb_input['product_stock'] = trim(getValue('product_stock'));
			$comb_input['price'] = trim(getValue('attr_price'));
			$comb_input['is_default'] = trim(getValue('is_default'));
			$comb_input['description'] = trim(getValue('attr_desc'));
			$comb_input['attribute_value_ids'] = trim(getValue('attribute_value_ids'));*/
			
			$obj_product = new Product();
			$result = $obj_product->modifyProduct($arr_input);
			
			/*$obj_comb = new Combination();
			$result_comb = $obj_comb->add($comb_input);*/
			
			if($result){
				header("Location:/product?action=modifyAction&id=" . $arr_input['id']);
			}
			
		}
	}
	
	public function UploadimgAjax () {
		$obj_img = new Image();
		$arr_input['url'] = $obj_img->uploadFile($_FILES['default_image']);
		echo $arr_input['url'];
		
		exit;
	}
	
	public function UploadimgAction () {
		if(!isSubmit('isUploadimg')){
			
		} else {
			$arr_input['locate_type'] = trim(getValue('locate_type', 1));
			$arr_input['type'] = trim(getValue('img_type', 1));
			$arr_input['product_id'] = trim(getValue('product_id', -1));
			$arr_input['product_attribute_id'] = trim(getValue('product_attribute_id', 1));
			$arr_input['description'] = trim(getValue('img_desc'));
			$arr_input['order'] = trim(getValue('order', 1));
			$arr_input['name'] = trim(getValue('img_name'));
			$arr_input['url'] = trim(getValue('url'));
			
			$obj_product = new Product();
			$image = $obj_product->addImage($arr_input);
			
			
			if($image){
				echo json_encode($image);	
			} else {
				echo 'faild';
			}
		}
	}
}
?>